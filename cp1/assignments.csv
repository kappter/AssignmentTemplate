title,course,strand,date,q1,q2,q3,q4,starter,preparer,demo,description,content,scale
Implement Project Management,GameDev2,01-01,1,"Students will implement project management skills by understanding the difference between waterfall and iterative development, prototyping, dividing project into managable components (with team) and utilizing project management skills.","Students will be divided into small teams to work on a mini-game project. Each team will choose a development methodology (waterfall or iterative), create a project plan, prototype their game idea, and divide the project into manageable tasks. They will use project management tools like Trello or Asana to track their progress and ensure effective collaboration.",Students will participate in guided practice sessions where they will: Discuss the pros and cons of waterfall vs. iterative development. Create a simple prototype of their game idea using basic game development tools. Break down their project into tasks and assign responsibilities within their team. Regularly update their project management tool with progress and any changes.,"Each team will submit their project plan, a link to their project management board, and a brief report (200-300 words) on their experience using the chosen development methodology. Additionally, they will submit the prototype of their mini-game.",Begin with a student-led discussion on project management methodologies. Questions to prompt discussion: What do you know about the waterfall and iterative development methodologies? Can you think of situations where one methodology might be more suitable than the other? What are the benefits of prototyping in game development?,Student1,The teacher will demonstrate: The key differences between waterfall and iterative development. The steps involved in creating a game prototype. How to divide a project into manageable tasks and assign them within a team. How to use project management tools like Trello or Asana for tracking progress and collaboration.,"Introduction to Project Management: Overview of project management in game development. Importance of effective project management for successful game development. Waterfall vs. Iterative Development: Detailed comparison of waterfall and iterative development methodologies. Scenarios where each methodology is best applied. Prototyping in Game Development: The role of prototyping in game development. Tools and techniques for creating game prototypes. Dividing Projects into Manageable Tasks: Methods for breaking down a project into smaller, manageable tasks. Assigning responsibilities within a team for efficient project execution. Utilizing Project Management Tools: Introduction to project management tools (Trello, Asana). Demonstration of setting up and using these tools for tracking project progress.",Links and Resources: Websites: Trello for project management and collaboration. Asana for task management and team collaboration. Scrum Alliance for resources on iterative development methodologies. Web Activities: Trello Tutorial - a video tutorial on using Trello for project management. Asana Guide - a comprehensive guide on using Asana for team collaboration.,3
Game Concept Development,GameDev2,01-02,2,"Students will be able to develop a game concept with a ""pitch document"" and consider plan, cost, and project gantt chart.","Students will work in small teams to create a game concept. Each team will develop a pitch document that includes a detailed game concept, an estimated budget, and a project gantt chart. This activity will help students understand the importance of planning and budgeting in game development.","Students will receive guidance on how to create a pitch document, estimate project costs, and develop a gantt chart. They will be provided with templates and examples to help them structure their documents and charts effectively.","Each team will submit their pitch document as a PDF file to Canvas. The document should include the game concept, estimated budget, and project gantt chart. Additionally, teams will submit a short presentation (5-10 slides) summarizing their pitch.",Begin with a student-led discussion on game concept development. Questions to prompt discussion: What makes a game concept compelling?How do you think planning and budgeting affect game development? What are the key components of a successful pitch document?,Student1,"The teacher will demonstrate: How to develop a game concept, including storyline, gameplay mechanics, and target audience. How to structure a pitch document with key sections such as concept overview, target audience, unique selling points, and gameplay details. How to estimate project costs, including development, marketing, and distribution expenses. How to create a project gantt chart to outline the timeline and milestones for the game development process.","Introduction to Game Concept Development: Importance of a strong game concept in the development process. Key elements of a game concept, including storyline, gameplay mechanics, and target audience. Creating a Pitch Document: Detailed guide on structuring a pitch document. Key sections: concept overview, target audience, unique selling points, gameplay details, and visual mock-ups. Estimating Project Costs: Overview of common expenses in game development. Tips for accurate cost estimation and budgeting. Developing a Project Gantt Chart: Introduction to gantt charts and their importance in project management. Step-by-step guide to creating a gantt chart, including key milestones and timeline.",Links and Resources: Websites: Gamasutra for articles and resources on game development. Project Management Institute for resources on project management and gantt charts. Web Activities: Gantt Chart Tutorial - a video tutorial on creating gantt charts for project management. Pitch Document Examples - examples of successful pitch documents from various industries.,3
Pre-Production (Design),GameDev2,01-03,3,"Students will create documents as a part of the pre-production phase including: script, storyboard, design concept, engine, play mechanics, game goals, level planning, world development, character plan, and blueprint.","Students will work in small teams to develop a suite of pre-production documents for a hypothetical game. Each team will create a script, storyboard, design concept, engine selection, play mechanics, game goals, level planning, world development, character plan, and blueprint. This will help students understand the detailed planning required before actual game production begins.","Students will receive templates and examples for each type of document. They will be guided through the process of creating each document, with opportunities to ask questions and receive feedback.","Each team will submit their pre-production documents as a single PDF file to Canvas. The submission should include all the required documents: script, storyboard, design concept, engine selection, play mechanics, game goals, level planning, world development, character plan, and blueprint.",Begin with a student-led discussion on the importance of pre-production in game development. Questions to prompt discussion: Why is pre-production crucial for a successful game development project? What challenges do you think might arise during the pre-production phase? How do you think detailed planning impacts the later stages of game development?,Student1,"The teacher will demonstrate: How to create a game script, including dialogue, action sequences, and event triggers. How to storyboard key scenes and levels of the game. How to develop a cohesive design concept, choose a suitable game engine, and define play mechanics. How to set clear and achievable game goals. How to plan levels and develop the game world, including maps and environmental design. How to create detailed character plans and blueprints for game development.","Introduction to Pre-Production: Overview of the pre-production phase and its importance in game development. Explanation of each document and its role in the development process. Creating a Script: How to write a game script, including dialogue, action sequences, and events. Storyboarding: How to create a storyboard to visualize key scenes and levels of the game. Design Concept and Engine Selection: Developing a design concept and choosing the right game engine for the project. Play Mechanics and Game Goals: Defining the core play mechanics and setting clear game goals. Level Planning and World Development: Planning levels, creating maps, and designing the game world. Character Plan and Blueprint: Creating detailed character plans and blueprints for game development.",Links and Resources: Websites: Unity Learn for tutorials on game development and engine selection. Gamasutra for articles on game design and pre-production. Web Activities: Storyboard That - an online tool for creating storyboards. Trello - for project management and planning.,3
Production (Create),GameDev2,01-04,4,Students will create the assets and incorporate them into a game with a prototype and alpha testing.,"Students will work in teams to create the necessary game assets for their project. These assets include characters, environments, sound effects, and more. They will then integrate these assets into their game engine to build a functional prototype. Finally, they will conduct alpha testing to identify bugs and areas for improvement.",Students will receive detailed instructions and demonstrations on how to create different types of game assets. They will be guided through the process of importing these assets into their game engine and building a prototype. There will be opportunities for hands-on practice and feedback throughout the activity.,Students will receive detailed instructions and demonstrations on how to create different types of game assets. They will be guided through the process of importing these assets into their game engine and building a prototype. There will be opportunities for hands-on practice and feedback throughout the activity.,"Begin with a brainstorming session where students discuss the types of assets they need for their game. Questions to guide the discussion: What assets are crucial for your game (characters, environments, sound)? How will you prioritize the creation of these assets? What challenges do you anticipate in creating and integrating these assets?",Student1,"The teacher will demonstrate: How to create different types of game assets using tools like Photoshop, Blender, and Audacity. How to import these assets into a game engine like Unity or Unreal Engine. How to assemble these assets into a working game prototype. How to conduct alpha testing and document findings.","Details: Creating Game Assets: Introduction to asset creation tools (e.g., Photoshop for 2D assets, Blender for 3D models, Audacity for sound). Step-by-step guide to creating characters, environments, and sound effects. Importing Assets into Game Engine: Instructions on how to import various assets into Unity or Unreal Engine. Best practices for organizing and managing assets within the game engine. Building the Prototype: Assembling assets to create a playable game prototype. Implementing basic game mechanics and interactions. Alpha Testing: Conducting alpha tests to identify bugs and issues. Documenting the results of alpha testing and planning for improvements.","Links and Resources: Websites: Unity Learn - Tutorials for creating and integrating assets in Unity. Blender - Resources and tutorials for creating 3D models. Photoshop Tutorials - Official Adobe Photoshop tutorials. Web Activities: Audacity - Free, open-source tool for audio editing. Krita - Free, open-source painting program for creating 2D assets.",3
Project Based Game Development Quiz,GameDev2,01-PS,5,Students will be tested on the game development life cycle.,,,,,,,,,3
Aesthetic Game Design Components,GameDev2,02-01,6,"Students will be able to explain and implement key aesthetics including: animation, sprites or 3D models, environment, audio and user interface.","Students will work on a mini-project where they design and implement key aesthetic components in a game prototype. This includes creating and animating sprites or 3D models, designing game environments, incorporating audio elements, and designing a user-friendly UI. Each student or group will focus on a specific component and then integrate their work into a cohesive game prototype.",Students will follow along with detailed tutorials and live demonstrations to learn how to create and implement each aesthetic component. The teacher will provide step-by-step guidance and feedback as students progress through the activity.,"Students will submit their completed game prototype, including all implemented aesthetic components, along with a report that explains the design choices and implementation process. Submissions will be made via Canvas.","Begin with a discussion where students share their favorite game aesthetics and why they find them appealing. Questions to guide the discussion: What game aesthetics do you find most engaging and why? How do different aesthetic elements (animation, environment, audio, UI) contribute to the overall game experience? Can you think of a game where the aesthetics greatly enhanced or detracted from the gameplay experience?",Student1,The teacher will demonstrate: How to create and animate sprites using tools like Photoshop and Unity. How to design 3D models and environments using Blender. How to integrate audio elements using Audacity and Unity's audio system. How to design and implement a user interface in Unity.,"Animation and Sprites/3D Models: Creating and animating 2D sprites in Photoshop. Designing and animating 3D models in Blender. Importing and using these assets in Unity. Environment Design: Techniques for designing game environments. Using Unity's terrain tools and asset store to create immersive environments. Audio Elements: Creating and editing sound effects and background music using Audacity. Implementing audio elements in Unity, including sound triggers and background music loops. User Interface Design: Principles of effective UI design. Using Unity's UI tools to create interactive menus, health bars, and other UI elements.","Links and Resources: Websites: Unity Learn - Tutorials for creating animations, environments, and UI in Unity. Blender - Resources and tutorials for creating 3D models. Photoshop Tutorials - Official Adobe Photoshop tutorials for creating sprites. Web Activities: Audacity - Free, open-source tool for audio editing. Krita - Free, open-source painting program for creating 2D sprites.",3
Functional Game Design Components,GameDev2,02-02,7,"Students will be able to explain and implement key functional components including: physics, user input, user feedback, and scripting.","Students will work on a mini-project where they design and implement key functional components in a game prototype. This includes incorporating physics for realistic movement and interactions, handling user input for controls, providing user feedback through visual or auditory cues, and scripting game logic and mechanics.",Students will follow along with detailed tutorials and live demonstrations to learn how to create and implement each functional component. The teacher will provide step-by-step guidance and feedback as students progress through the activity.,"Students will submit their completed game prototype, including all implemented functional components, along with a report that explains the design choices and implementation process. Submissions will be made via Canvas.","Begin with a discussion where students share their experiences with functional components in games. Questions to guide the discussion: What functional components do you find most critical for gameplay and why? How do physics, user input, and user feedback enhance your gaming experience? Can you think of a game where functional components greatly enhanced or detracted from the gameplay experience?",Student1,"The teacher will demonstrate: How to implement physics in Unity, including gravity, collisions, and forces. How to handle user input for character controls and UI interactions. How to provide user feedback through visual effects, sound, and haptic feedback. How to script game mechanics and logic using C# in Unity.","Physics: Setting up physics in Unity, including Rigidbody and Collider components. Applying forces and detecting collisions. Creating realistic movement and interactions. User Input: Handling keyboard, mouse, and gamepad input in Unity. Setting up input mappings and customizing controls. Creating responsive and intuitive control schemes. User Feedback: Providing visual feedback through particle effects, animations, and UI elements. Incorporating sound effects and background music for auditory feedback. Using haptic feedback for an immersive experience. Scripting: Writing C# scripts to control game mechanics and logic. Using Unity's API to manipulate game objects and components. Implementing game states, events, and interactions. ","Links and Resources: Websites: Unity Learn - Tutorials for implementing physics, input handling, and scripting in Unity. Unity Manual - Physics - Official documentation on physics in Unity. C# Programming Guide - Official Microsoft guide for C# programming. Web Activities: Project: Roll-a-Ball - A beginner project on Unity Learn that covers physics and input handling. Project: Survival Shooter - A more advanced project that includes scripting game mechanics and user feedback.",3
Design Usability and Accessibility,GameDev2,02-03,8,"Students will implement the design control concepts via: player controls, ADA compliance, and player immersion",,,,,,,,,3
Interface Elements,GameDev2,02-04,9,"Students will implement classifications of interface elements by: understanding diegetic elements, non-diegetic elements, spacial elements, and meta elements",,,,,,,,,3
Communication Features and Interface Design Quiz,GameDev2,02-PS,10,Students will be tested on communication features and game interface design.,,,,,,,,,3
Beta Testing,GameDev2,03-01,11,Students will beta test class games with feedback from testers and making adjustments.,,,,,,,,,3
Marketing,GameDev2,03-02,12,"Students will use marketing strategies to advertise their game by: identifying target audience, researching marketing platforms, choosing a license model, understanding the role of community management in marketing, advertising in two mediums, and understanding monetized versus free game model.",,,,,,,,,3
Game Release,GameDev2,03-03,13,"Students will publish or release their game by: researching intellectual properties, explaining piracy and copyright, and publishing to a platform.",,,,,,,,,3
Game Maintenance,GameDev2,03-04,14,"Students will provide for maintenance of a game by: developing strategies for post release content, bug fixes and updates.",,,,,,,,,3
Post Production Quiz,GameDev2,03-PS,15,"Students will be tested on marketing strategies, engage in game testing and releasing a game.",,,,,,,,,3
Term Test,GameDev2,00-00,16,Students will be tested on concepts covered in the term.,,,,,,,,,3
Implement Project Management,GameDev2,01-01,17,"Students will implement project management skills by understanding the difference between waterfall and iterative development, prototyping, dividing project into managable components (with team) and utilizing project management skills.",,,,,,,,,3
Game Concept Development,GameDev2,01-02,18,"Students will be able to develop a game concept with a ""pitch document"" and consider plan, cost, and project gantt chart.",,,,,,,,,3
Pre-Production (Design),GameDev2,01-03,19,"Students will create documents as a part of the pre-production phase including: script, storyboard, design concept, engine, play mechanics, game goals, level planning, world development, character plan, and blueprint.",,,,,,,,,3
Production (Create),GameDev2,01-04,20,Students will create the assets and incorporate them into a game with a prototype and alpha testing.,,,,,,,,,3
Project Based Game Development Quiz,GameDev2,01-PS,21,Students will be tested on the game development life cycle.,,,,,,,,,3
Aesthetic Game Design Components,GameDev2,02-01,22,"Students will be able to explain and implement key aesthetics including: animation, sprites or 3D models, environment, audio and user interface.",,,,,,,,,3
Functional Game Design Components,GameDev2,02-02,23,"Students will be able to explain and implement key functional components including: physics, user input, user feedback, and scripting.",,,,,,,,,3
Design Usability and Accessibility,GameDev2,02-03,24,"Students will implement the design control concepts via: player controls, ADA compliance, and player immersion",,,,,,,,,3
Interface Elements,GameDev2,02-04,25,"Students will implement classifications of interface elements by: understanding diegetic elements, non-diegetic elements, spacial elements, and meta elements",,,,,,,,,3
Communication Features and Interface Design Quiz,GameDev2,02-PS,26,Students will be tested on communication features and game interface design.,,,,,,,,,3
Beta Testing,GameDev2,03-01,27,Students will beta test class games with feedback from testers and making adjustments.,,,,,,,,,3
Marketing,GameDev2,03-02,28,"Students will use marketing strategies to advertise their game by: identifying target audience, researching marketing platforms, choosing a license model, understanding the role of community management in marketing, advertising in two mediums, and understanding monetized versus free game model.",,,,,,,,,3
Game Release,GameDev2,03-03,29,"Students will publish or release their game by: researching intellectual properties, explaining piracy and copyright, and publishing to a platform.",,,,,,,,,3
Game Maintenance,GameDev2,03-04,30,"Students will provide for maintenance of a game by: developing strategies for post release content, bug fixes and updates.",,,,,,,,,3
Post Production Quiz,GameDev2,03-PS,31,"Students will be tested on marketing strategies, engage in game testing and releasing a game.",,,,,,,,,3
State Certification Test,GameDev2,00-00,32,,,,,,,,,,3